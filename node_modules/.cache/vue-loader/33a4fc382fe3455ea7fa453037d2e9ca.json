{"remainingRequest":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhaoguanglin/Documents/corgi/corgi-admin/src/views/dataCenter/keep/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/src/views/dataCenter/keep/index.vue","mtime":1589551163533},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport tableCommon from '@/mixins/tableCommon'\nimport { searchCommon } from '@/mixins/commonSet'\nimport { getStatistics, getUserStay } from '@/api/dataCenter'\nimport { pickerOptions, keepColumnStyle } from '@/utils/const'\nimport pageConfig from './pageConfig'\nexport default {\n  mixins: [tableCommon, searchCommon],\n  data() {\n    return {\n      ...pageConfig,\n      pickerOptions,\n      extraHeight: 0,\n      keepDay: [1, 2, 3, 4, 5, 6, 7, 14, 30, 60, 90],\n      keepColumn: [\n        { label: '+1日', keepDay: '1' },\n        { label: '+2日', keepDay: '2' },\n        { label: '+3日', keepDay: '3' },\n        { label: '+4日', keepDay: '4' },\n        { label: '+5日', keepDay: '5' },\n        { label: '+6日', keepDay: '6' },\n        { label: '+7日', keepDay: '7' },\n        { label: '+14日', keepDay: '14' },\n        { label: '+1月', keepDay: '30' },\n        { label: '+2月', keepDay: '60' },\n        { label: '+3月', keepDay: '90' }\n      ],\n      loadingMap: {\n        tableLoading: false\n      }\n    }\n  },\n  beforeMount() {\n    this.$nextTick(() => {\n      this.addTabelHeightListener('parent')\n      this.getPageData()\n    })\n  },\n  methods: {\n    generateData(params) {\n      console.log(params)\n      const { startDate, endDate, stayCount } = Object.entries(params).reduce((data, [key, value]) => {\n        data[key] = key === 'stayCount' ? value : this.$day(value)\n        return data\n      }, {})\n      const diff = Math.abs(startDate.diff(endDate, 'day'))\n      return Array(diff).fill('').map((item, index) => {\n        const loginDate = startDate.add(index, 'day')\n        let count = Math.floor(Math.random() * 1000)\n        return Array(Number(stayCount) + 1).fill('').map((keep, keepIndex) => {\n          count = parseInt(count * (1 - Math.floor(Math.random() * 30) / 100))\n          return {\n            loginDate: loginDate.format('YYYY-MM-DD'),\n            stayDate: loginDate.add(keepIndex, 'day').format('YYYY-MM-DD'),\n            stayCount: keepIndex,\n            count\n          }\n        })\n      }).flat(Infinity)\n    },\n    async getPageData() {\n      if (this.$common.checkFormValid(this, this.searchRef)) {\n        try {\n          this.loadingMap.tableLoading = true\n          const searchForm = this.parseForm()\n          const [keepData, regisData] = await Promise.all([this.getKeepData(searchForm), this.getRegisData(searchForm)])\n          this.tableData = this.parseTabelData(regisData, keepData)\n        } catch (err) {\n          console.log(err)\n          this.tableData = []\n        } finally {\n          this.loadingMap.tableLoading = false\n        }\n      }\n    },\n    async getRegisData(searchForm) {\n      const type = 'register'\n      const { startDate, endDate } = searchForm\n      const result = await getStatistics({ type, startDate, endDate })\n      return result.data\n    },\n    async getKeepData(searchForm) {\n      const result = await getUserStay(searchForm)\n      return result.data\n    },\n    parseTabelData(regisData, keepData) {\n      keepData = keepData.reduce((obj, item) => {\n        if (!obj[item.loginDate]) {\n          obj[item.loginDate] = {}\n        }\n        obj[item.loginDate][item.stayCount] = item.count\n        return obj\n      }, {})\n      return regisData.map(({ date, count }) => {\n        const loginDate = date\n        const temp = { loginDate }\n        temp.base = count\n        if (keepData[loginDate] && keepData[loginDate].hasOwnProperty('1')) {\n          this.keepDay.forEach(keepDay => {\n            temp[keepDay] = keepData[loginDate][keepDay]\n          })\n        }\n        return temp\n      })\n    },\n    getKeepPersent(row, column, cellValue) {\n      let value = 'N/A'\n      if (typeof cellValue === 'number') {\n        if (row.base === 0) {\n          value = 0 + '%'\n        } else {\n          value = (cellValue / row.base * 100).toFixed(1) + '%'\n        }\n      }\n      return value\n    },\n    getColumnStyle({ row, column, rowIndex, columnIndex }) {\n      const value = row[column.property]\n      if (typeof value === 'number' && row.base !== 0) {\n        const persent = (value / row.base * 100).toFixed(1)\n        const check = keepColumnStyle.find(item => persent >= item.min && persent <= item.max)\n        return check && {\n          backgroundColor: check.background,\n          color: check.color || '#000'\n        }\n      }\n    },\n    parseForm() {\n      const [startDate, endDate] = this.searchForm.dateRange.map(date => this.$day(date).format('YYYY-MM-DD'))\n      const { stayCount } = this.searchForm\n      return { startDate, endDate, stayCount }\n    }\n  }\n}\n",null]}