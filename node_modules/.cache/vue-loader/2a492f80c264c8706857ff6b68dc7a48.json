{"remainingRequest":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhaoguanglin/Documents/corgi/corgi-admin/src/views/contentMgr/activityImageCensor/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/src/views/contentMgr/activityImageCensor/index.vue","mtime":1587656086000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getCheckPic, countCheckPic, passPic, refusePic } from '@/api/contentMgr'\nimport Censorshipstatus from '@/components/Censorshipstatus'\nimport Activityid from '@/components/Activityid'\nimport tableCommon from '@/mixins/tableCommon'\nimport contentMgrCommon from '../mixins/common'\nimport { allCensorshipTypes } from '@/utils/const'\nimport pageConfig from './pageConfig'\nexport default {\n  components: { Censorshipstatus, Activityid },\n  mixins: [tableCommon, contentMgrCommon],\n  data() {\n    return {\n      allCensorshipTypes,\n      ...pageConfig\n    }\n  },\n  methods: {\n    async getData() {\n      try {\n        this.loadingMap.tableLoading = true\n        const task = [this.getCheckPic(), this.getCheckPicCount()]\n        await Promise.all(task)\n      } catch (err) {\n        console.log(err)\n      } finally {\n        this.loadingMap.tableLoading = false\n      }\n    },\n    async getCheckPic() {\n      try {\n        const type = this.censorType\n        const data = await getCheckPic({ ...this.searchForm, ...this.pagination, type })\n        this.tableData = data.data.map(item => {\n          item.ctime = item.ctime.slice(0, -2)\n          item.uptime = item.uptime.slice(0, -2)\n          return item\n        })\n      } catch (err) {\n        console.log(err)\n      }\n    },\n    async getCheckPicCount() {\n      try {\n        const type = this.censorType\n        const data = await countCheckPic({ ...this.searchForm, type })\n        this.paginationTotal = data.data\n      } catch (err) {\n        console.log(err)\n      }\n    },\n    parseCensorshipType(value) {\n      const result = this.allCensorshipTypes.find(item => item.value === value)\n      return result && result.label || '--'\n    },\n    async checkPicPass(scope) {\n      try {\n        const { dataId } = scope.row\n        const type = this.censorType\n        const userId = -1\n        await passPic({ dataId, type, userId })\n        this.$message({ type: 'success', message: '操作成功' })\n        this.getData()\n      } catch (err) {\n        console.log(err)\n      }\n    },\n    async checkPicRefuse(scope) {\n      try {\n        await this.$msgbox.confirm('确定不通过该图片', '提醒', {\n          confirmButtonText: '删除',\n          cancelButtonText: '取消',\n          type: 'warning',\n          dangerouslyUseHTMLString: true\n        })\n        const { dataId } = scope.row\n        const type = this.censorType\n        const userId = -1\n        await refusePic({ dataId, type, userId })\n        this.$message({ type: 'success', message: '操作成功' })\n        this.getData()\n      } catch (err) {\n        err !== 'cancel' && console.error(err)\n      }\n    }\n  }\n}\n",null]}