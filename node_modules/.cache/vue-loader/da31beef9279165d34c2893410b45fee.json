{"remainingRequest":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhaoguanglin/Documents/corgi/corgi-admin/src/views/dataCenter/components/statistics.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/src/views/dataCenter/components/statistics.vue","mtime":1589275800946},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getStatistics, sumStatistics } from '@/api/dataCenter'\r\nexport default {\r\n  data() {\r\n    return {\r\n      useData: {\r\n        ystdRegis: {\r\n          title: '昨日新增注册人数',\r\n          count: 0,\r\n          day: '',\r\n          week: '',\r\n          month: '',\r\n          loading: true\r\n        },\r\n        totalRegis: {\r\n          title: '累计注册人数',\r\n          count: 0,\r\n          day: '',\r\n          week: '',\r\n          month: '',\r\n          loading: true\r\n        },\r\n        ystdActive: {\r\n          title: '昨日发布活动数',\r\n          count: 0,\r\n          day: '',\r\n          week: '',\r\n          month: '',\r\n          loading: true\r\n        },\r\n        totalActive: {\r\n          title: '累计发布活动数',\r\n          count: 0,\r\n          day: '',\r\n          week: '',\r\n          month: '',\r\n          loading: true\r\n        }\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getBaseData()\r\n  },\r\n  methods: {\r\n    async getBaseData() {\r\n      try {\r\n        const startDate = this.$day(new Date()).subtract(1, 'day').format('YYYY-MM-DD')\r\n        const endDate = startDate\r\n        const task = []\r\n        task.push(this.getYstdRegis({ startDate, endDate }))\r\n        task.push(this.getYstdActivity({ startDate, endDate }))\r\n        task.push(this.getTotalRegis({ startDate, endDate }))\r\n        task.push(this.getTotalActivity({ startDate, endDate }))\r\n        await Promise.all(task)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    },\r\n    async getYstdRegis(date) {\r\n      try {\r\n        const type = 'register'\r\n        const result = await this.getStatisicData({ type, ...date })\r\n        this.useData.ystdRegis.count = Array.isArray(result) ? result[0].count : null\r\n      } catch (err) {\r\n        console.log(err)\r\n      } finally {\r\n        this.useData.ystdRegis.loading = false\r\n      }\r\n    },\r\n    async getYstdActivity(date) {\r\n      try {\r\n        const type = 'activity'\r\n        const result = await this.getStatisicData({ type, ...date })\r\n        this.useData.ystdActive.count = Array.isArray(result) ? result[0].count : null\r\n      } catch (err) {\r\n        console.log(err)\r\n      } finally {\r\n        this.useData.ystdActive.loading = false\r\n      }\r\n    },\r\n    async getTotalRegis() {\r\n      try {\r\n        const type = 'register'\r\n        this.useData.totalRegis.count = await this.sumStatisicData({ type })\r\n      } catch (err) {\r\n        console.log(err)\r\n      } finally {\r\n        this.useData.totalRegis.loading = false\r\n      }\r\n    },\r\n    async getTotalActivity() {\r\n      try {\r\n        const type = 'activity'\r\n        this.useData.totalActive.count = await this.sumStatisicData({ type })\r\n      } catch (err) {\r\n        console.log(err)\r\n      } finally {\r\n        this.useData.totalActive.loading = false\r\n      }\r\n    },\r\n    async getStatisicData(params) {\r\n      try {\r\n        const result = await getStatistics(params)\r\n        return result.hasOwnProperty('data') ? result.data : null\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    },\r\n    async sumStatisicData(params) {\r\n      try {\r\n        const result = await sumStatistics(params)\r\n        return result.hasOwnProperty('data') ? result.data : null\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}