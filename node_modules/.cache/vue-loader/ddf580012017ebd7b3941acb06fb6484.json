{"remainingRequest":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhaoguanglin/Documents/corgi/corgi-admin/src/views/dataCenter/activitytype/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/src/views/dataCenter/activitytype/index.vue","mtime":1586875716000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport specifyCommon from '../mixins/specifyCommon'\r\nimport pageConfig from './pageConfig'\r\nexport default {\r\n  mixins: [specifyCommon],\r\n  data() {\r\n    return {\r\n      ...pageConfig,\r\n      chartRadio: 'all',\r\n      customizeProp: [],\r\n      tableHeight: 700\r\n    }\r\n  },\r\n  methods: {\r\n    parseChartData() {\r\n      this.getAllKeys()\r\n      this.customizeProp = []\r\n      this.useProp.forEach(prop => this.baseType.some(type => prop === type) || this.customizeProp.push(prop))\r\n      this.handleRadioChange()\r\n      this.showChart = true\r\n    },\r\n    resetChart() {\r\n      this.chartOption.option.xAxis = []\r\n      this.chartOption.option.series = []\r\n\r\n      const xAxis = this.$common.deepCopy(this.xAxisTpl)\r\n      xAxis.data = this.chartData.map(chartItem => chartItem.date)\r\n      this.chartOption.option.xAxis.push(xAxis)\r\n    },\r\n    allChart() {\r\n      this.resetChart()\r\n      this.useProp.forEach(prop => {\r\n        const series = this.$common.deepCopy(this.seriesTpl)\r\n        if (this.baseType.some(type => prop === type)) {\r\n          series.name = prop\r\n          series.data = this.chartData.map(item => item[prop])\r\n        }\r\n        this.chartOption.option.series.push(series)\r\n      })\r\n      if (this.customizeProp.length) {\r\n        const series = this.$common.deepCopy(this.seriesTpl)\r\n        series.name = '自定义'\r\n        series.data = this.chartData.map(item => {\r\n          let sum = 0\r\n          this.customizeProp.forEach(prop => {\r\n            sum += item[prop] || 0\r\n          })\r\n          return sum\r\n        })\r\n        this.chartOption.option.series.push(series)\r\n      }\r\n      this.chartOption.option.legend.data = [...this.useProp, '自定义']\r\n    },\r\n    customizeChart() {\r\n      this.resetChart()\r\n      this.customizeProp.forEach(prop => {\r\n        const series = this.$common.deepCopy(this.seriesTpl)\r\n        series.name = prop\r\n        series.data = this.chartData.map(item => item[prop])\r\n        this.chartOption.option.series.push(series)\r\n      })\r\n      this.chartOption.option.legend.data = this.customizeProp\r\n    },\r\n    parseTableData() {\r\n      this.tableData = this.chartData.map((item, index) => {\r\n        const itemData = {}\r\n        itemData.date = item.date\r\n        itemData.children = []\r\n        itemData.id = `date-key-${index}`\r\n\r\n        const baseData = []\r\n        const manualData = []\r\n        let baseTotal = 0\r\n        let manualTotal = 0\r\n        Object.entries(item).forEach(([key, value]) => {\r\n          if (key !== 'date') {\r\n            if (this.baseType.some(baseKey => baseKey === key)) {\r\n              baseTotal += Number(value)\r\n              baseData.push({ base: key, baseValue: value })\r\n            } else {\r\n              manualTotal += Number(value)\r\n              manualData.push({ manual: key, manualValue: value })\r\n            }\r\n          }\r\n        })\r\n        itemData.base = '基础类型总计'\r\n        itemData.baseValue = baseTotal\r\n        itemData.manual = '自定义类型总计'\r\n        itemData.manualValue = manualTotal\r\n        baseData.forEach((base, baseIndex) => {\r\n          const id = `date-key-${index}-base-${baseIndex}`\r\n          itemData.children.push({ ...base, ...manualData.shift(), id })\r\n        })\r\n        manualData.forEach((manual, manualIndex) => {\r\n          const id = `date-key-${index}-manual-${manualIndex}`\r\n          itemData.children.push({ ...manual, id })\r\n        })\r\n        return itemData\r\n      })\r\n      this.tableHead = this.baseTime.map(item => this.$day(item).format('YYYY-MM-DD')).join(' — ')\r\n    },\r\n    handleRadioChange(value) {\r\n      const status = this.chartRadio\r\n      status === 'all' ? this.allChart() : this.customizeChart()\r\n    },\r\n    exportData() {\r\n      const header = ['日期', '基础类型', '总计', '自定义类型', '总计']\r\n      const filename = this.tableHead + this.chartTitle\r\n      const data = this.tableData.map(temp => {\r\n        const tempData = []\r\n        tempData.push([temp.date, '', '', '', ''])\r\n        temp.children.map(item => {\r\n          const result = this.$common.deepCopy(item)\r\n          delete result.id\r\n          const { base, baseValue, manual, manualValue } = result\r\n          tempData.push(['', base, baseValue, manual, manualValue])\r\n        })\r\n        return tempData\r\n      }).flat(1)\r\n      import('@/vendor/Export2Excel').then(excel => {\r\n        excel.export_json_to_excel({\r\n          header,\r\n          data,\r\n          filename,\r\n          autoWidth: true,\r\n          bookType: 'xlsx'\r\n        })\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}