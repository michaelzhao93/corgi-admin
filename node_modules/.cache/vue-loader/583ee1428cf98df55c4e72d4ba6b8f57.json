{"remainingRequest":"/Users/zhaoguanglin/corgi-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhaoguanglin/corgi-admin/src/views/contentMgr/ranking/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhaoguanglin/corgi-admin/src/views/contentMgr/ranking/index.vue","mtime":1599315591532},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { get_by_date,update_banner,delete_banner} from '@/api/contentMgr'\r\nimport Censorshipstatus from '@/components/Censorshipstatus'\r\nimport Userid from '@/components/Userid'\r\nimport Detail from './Detail'\r\nimport tableCommon from '@/mixins/tableCommon'\r\nimport contentMgrCommon from '../mixins/common'\r\nimport { allCensorshipTypes } from '@/utils/const'\r\nimport { parseImageStatus, emit } from '@/mixins/commonSet'\r\nimport pageConfig from './pageConfig'\r\nimport specifyCommon from '../mixins/specifyCommon'\r\n\r\nexport default {\r\n  components: { Censorshipstatus, Detail,Userid },\r\n  mixins: [tableCommon, contentMgrCommon,emit,specifyCommon],\r\n   data() {\r\n    return {\r\n      allCensorshipTypes,\r\n      chartRadio:\"推荐页banner\",\r\n      visibleMap: {\r\n        censorDiaVisible: false,\r\n        detailDiaVisible: false,\r\n        statusDialogVisible: false\r\n      },\r\n      ...pageConfig\r\n    }\r\n  },\r\n  methods: {\r\n    async getData() {\r\n       const [startDate, endDate] = this.baseTime.map(item => this.$day(item).format('YYYY-MM-DD'))\r\n\r\n      try {\r\n\r\n\r\n        const data = await get_by_date({startDate,endDate})\r\n                console.log(data)\r\n\r\n        this.tableData = data.data.map(item => {\r\n          return item\r\n        })\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    },\r\n    async checkPicPass(enable,scope) {\r\n      \r\n      let title =  scope.title;\r\n      let url =  scope.url;\r\n      let order =  scope.order;\r\n      let status = enable ? '1': '0'\r\n\r\n      let type = scope.type;\r\n      let picUrl  = scope.picUrl;\r\n      let urlType = scope.urlType;\r\n      let id = scope.id;\r\n      let data = ({ id:id,title: title, url: url, order: order, status: status, type: type, picUrl: picUrl, urlType: urlType});\r\n      console.log(data)\r\n      update_banner(data);\r\n      this.getData();\r\n            this.getData();\r\n    },\r\n\r\n    async updateOrder(enable,scope) {\r\n      \r\n      let title =  scope.title;\r\n      let url =  scope.url;\r\n      let order =  scope.order;\r\n      let status = scope.status;\r\n\r\n      let type = scope.type;\r\n      let picUrl  = scope.picUrl;\r\n      let urlType = scope.urlType;\r\n      let id = scope.id;\r\n\r\n      if(enable)\r\n      {\r\n        let num = parseInt(order);\r\n        num++;\r\n        order = (num).toString();\r\n      }\r\n      else\r\n      {\r\n        if(order=='1')\r\n        {\r\n          return;\r\n        }\r\n        let num = parseInt(order);\r\n        num--;\r\n        order = (num).toString();\r\n              }\r\n      let data = ({ id:id,title: title, url: url, order: order, status: status, type: type, picUrl: picUrl, urlType: urlType});\r\n      console.log(data)\r\n      update_banner(data);\r\n      this.getData();\r\n            this.getData();\r\n\r\n    },\r\n   handleRadioChange() {\r\n     this.getData();\r\n    },\r\n\r\n    async handleAddMember(data) {\r\n      this.catchedData = data\r\n      this.catchedData.typelable = this.chartRadio\r\n      this.visibleMap.detailDiaVisible = true\r\n    },\r\n    async checkPicRefuse(scope) {\r\n      try {\r\n        await this.$msgbox.confirm('确定删除吗', '提醒', {\r\n          confirmButtonText: '删除',\r\n          cancelButtonText: '取消',\r\n          type: 'warning',\r\n          dangerouslyUseHTMLString: true\r\n        })\r\n        let bannerId = scope.id;\r\n\r\n        await delete_banner({ bannerId })\r\n        this.$message({ type: 'success', message: '操作成功' })\r\n        this.getData()\r\n              this.getData();\r\n\r\n      } catch (err) {\r\n        err !== 'cancel' && console.log(err)\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}