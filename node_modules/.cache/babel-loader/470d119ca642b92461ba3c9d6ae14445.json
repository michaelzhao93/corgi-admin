{"remainingRequest":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/babel-loader/lib/index.js!/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhaoguanglin/Documents/corgi/corgi-admin/src/views/matchMgr/mixins/specifyCommon.js","dependencies":[{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/src/views/matchMgr/mixins/specifyCommon.js","mtime":1587890732000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _interopRequireWildcard2 = _interopRequireDefault(require(\"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/@babel/runtime-corejs2/helpers/interopRequireWildcard\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/@babel/runtime-corejs2/helpers/toConsumableArray\"));\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es7.object.values\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/@babel/runtime-corejs2/helpers/slicedToArray\"));\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator\"));\n\nrequire(\"../style/index.scss\");\n\nvar _dateRangePicker = _interopRequireDefault(require(\"../components/dateRangePicker\"));\n\nvar _dataCenter = require(\"@/api/dataCenter\");\n\nvar _Chart = _interopRequireDefault(require(\"@/components/Chart\"));\n\nvar _tableCommon = _interopRequireDefault(require(\"@/mixins/tableCommon\"));\n\nvar _commonSet = require(\"@/mixins/commonSet\");\n\nvar _const = require(\"@/utils/const\");\n\nvar _default = {\n  mixins: [_tableCommon.default, _commonSet.emit],\n  components: {\n    Chart: _Chart.default,\n    dateRangePicker: _dateRangePicker.default\n  },\n  data: function data() {\n    var today = this.$day(new Date()).subtract(1, 'day').toDate();\n    return {\n      seriesItemColor: _const.seriesItemColor,\n      baseTime: [today, today],\n      useProp: [],\n      chartData: {},\n      tableHeight: 400,\n      tableHead: '',\n      loadingMap: {\n        chartLoading: false\n      },\n      xAxisTpl: {\n        type: 'category',\n        data: []\n      },\n      chartTitle: this.$route.meta.title,\n      seriesTpl: {\n        name: '',\n        type: 'line',\n        smooth: true,\n        data: []\n      },\n      chartOption: {\n        option: {\n          title: {\n            text: '',\n            top: '3%',\n            left: 'center'\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          toolbox: {\n            show: true,\n            feature: {\n              mark: {\n                show: true\n              },\n              dataView: {\n                show: true,\n                readOnly: false\n              },\n              magicType: {\n                show: true,\n                type: ['line', 'bar']\n              },\n              restore: {\n                show: true\n              },\n              saveAsImage: {\n                show: true\n              }\n            }\n          },\n          dataZoom: [{\n            show: true,\n            start: 0,\n            end: 100,\n            xAxisIndex: [0]\n          }, {\n            type: 'inside',\n            start: 0,\n            end: 100\n          }, {\n            show: true,\n            yAxisIndex: 0,\n            filterMode: 'filter',\n            width: 30,\n            height: '65%',\n            showDataShadow: false,\n            left: '93%',\n            top: '100',\n            bottom: '100'\n          }],\n          legend: {\n            top: '50',\n            data: []\n          },\n          grid: {\n            top: '100',\n            bottom: '70'\n          },\n          xAxis: [{}],\n          yAxis: [{\n            type: 'value',\n            minInterval: 1\n          }],\n          series: []\n        }\n      }\n    };\n  },\n  computed: {\n    isTimeSelected: function isTimeSelected() {\n      return this.baseTime.every(function (item) {\n        return item;\n      });\n    },\n    chartOptionWatcher: function chartOptionWatcher() {\n      var option = this.chartOption;\n      option.option.title.text = this.chartTitle;\n      return option;\n    }\n  },\n  created: function created() {\n    this.handleChartBtnClick();\n  },\n  methods: {\n    handleChartBtnClick: function () {\n      var _handleChartBtnClick = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.isTimeSelected) {\n                  _context.next = 16;\n                  break;\n                }\n\n                _context.prev = 1;\n                this.loadingMap.tableLoading = true;\n                this.loadingMap.chartLoading = true;\n                _context.next = 6;\n                return this.wrapGetChartData(this.chartType);\n\n              case 6:\n                if (this.chartData) {\n                  this.parseChartData();\n                  this.parseTableData();\n                }\n\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n\n              case 12:\n                _context.prev = 12;\n                this.loadingMap.tableLoading = false;\n                this.loadingMap.chartLoading = false;\n                return _context.finish(12);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 9, 12, 16]]);\n      }));\n\n      function handleChartBtnClick() {\n        return _handleChartBtnClick.apply(this, arguments);\n      }\n\n      return handleChartBtnClick;\n    }(),\n    wrapGetChartData: function () {\n      var _wrapGetChartData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(type) {\n        var _this = this;\n\n        var result;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.getChartData(type, this.baseTime);\n\n              case 2:\n                result = _context2.sent;\n                this.chartData = result.sort(function (a, b) {\n                  var next = _this.$day(a.date);\n\n                  var from = _this.$day(b.date);\n\n                  return next.isAfter(from) ? 1 : -1;\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function wrapGetChartData(_x) {\n        return _wrapGetChartData.apply(this, arguments);\n      }\n\n      return wrapGetChartData;\n    }(),\n    getChartData: function () {\n      var _getChartData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(type, date) {\n        var _this2 = this;\n\n        var _date$map, _date$map2, startDate, endDate, result;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _date$map = date.map(function (item) {\n                  return _this2.$day(item).format('YYYY-MM-DD');\n                }), _date$map2 = (0, _slicedToArray2.default)(_date$map, 2), startDate = _date$map2[0], endDate = _date$map2[1];\n                _context3.next = 3;\n                return (0, _dataCenter.getStatistics)({\n                  type: type,\n                  startDate: startDate,\n                  endDate: endDate\n                });\n\n              case 3:\n                result = _context3.sent;\n                return _context3.abrupt(\"return\", result.hasOwnProperty('data') && Array.isArray(result.data) && result.data.length ? result.data : []);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getChartData(_x2, _x3) {\n        return _getChartData.apply(this, arguments);\n      }\n\n      return getChartData;\n    }(),\n    parseChartData: function parseChartData() {\n      var _this3 = this;\n\n      this.chartOption.option.xAxis = [];\n      this.chartOption.option.series = [];\n      var xAxis = this.$common.deepCopy(this.xAxisTpl);\n      xAxis.data = this.chartData.map(function (chartItem) {\n        return chartItem.date;\n      });\n      this.chartOption.option.xAxis.push(xAxis);\n      this.getAllKeys();\n      this.useProp.forEach(function (orderKey) {\n        var series = _this3.$common.deepCopy(_this3.seriesTpl);\n\n        series.name = _this3.columnLable ? _this3.columnLable[orderKey] : orderKey;\n        series.data = _this3.chartData.map(function (item) {\n          return item[orderKey];\n        });\n\n        _this3.chartOption.option.series.push(series);\n      });\n      this.chartOption.option.legend.data = this.columnLable ? Object.values(this.columnLable) : this.useProp;\n      this.showChart = true;\n    },\n    getAllKeys: function getAllKeys() {\n      var _this4 = this;\n\n      if (this.exceptProp) {\n        var allKeys = {};\n        this.chartData.forEach(function (item) {\n          var filt = Object.keys(item).filter(function (prop) {\n            return _this4.exceptProp.every(function (except) {\n              return except !== prop;\n            });\n          });\n          filt.forEach(function (prop) {\n            allKeys[prop] = 1;\n          });\n        });\n        this.useProp = Object.keys(allKeys);\n      } else {\n        this.useProp = this.sortOrder;\n      }\n    },\n    parseTableData: function parseTableData() {\n      var _this5 = this;\n\n      this.tableData = this.chartData;\n      this.tableHead = this.baseTime.map(function (item) {\n        return _this5.$day(item).format('YYYY-MM-DD');\n      }).join(' — ');\n      this.loadingMap.tableLoading = false;\n    },\n    exportData: function exportData() {\n      var header = ['日期'].concat((0, _toConsumableArray2.default)(this.columnLable ? Object.values(this.columnLable) : this.useProp));\n      var useProp = ['date'].concat((0, _toConsumableArray2.default)(this.useProp));\n      var filename = this.tableHead + this.chartTitle;\n      var data = this.tableData.map(function (item) {\n        return useProp.map(function (prop) {\n          return item[prop];\n        });\n      });\n      Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/vendor/Export2Excel'));\n      }).then(function (excel) {\n        excel.export_json_to_excel({\n          header: header,\n          data: data,\n          filename: filename,\n          autoWidth: true,\n          bookType: 'xlsx'\n        });\n      });\n    }\n  }\n};\nexports.default = _default;",null]}