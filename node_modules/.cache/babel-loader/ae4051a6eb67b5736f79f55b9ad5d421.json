{"remainingRequest":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/thread-loader/dist/cjs.js!/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/babel-loader/lib/index.js!/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhaoguanglin/Documents/corgi/corgi-admin/src/views/dataCenter/MAU/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/src/views/dataCenter/MAU/index.vue","mtime":1586875230000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/es6.object.keys\";\nimport _slicedToArray from \"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport \"../style/index.scss\";\nimport { getStatistics } from '@/api/dataCenter';\nimport dateRangePicker from \"../components/dateRangePicker\";\nimport Chart from '@/components/Chart';\nimport { emit } from '@/mixins/commonSet';\nimport tableCommon from '@/mixins/tableCommon';\nimport pageConfig from \"./pageConfig\";\nexport default {\n  components: {\n    dateRangePicker: dateRangePicker,\n    Chart: Chart\n  },\n  mixins: [emit, tableCommon, pageConfig],\n  data: function data() {\n    return {\n      loadingMap: {\n        statsLoading: true\n      },\n      contrast: false,\n      extraHeight: 350\n    };\n  },\n  computed: {\n    chartOptionWatcher: function chartOptionWatcher() {\n      return this.chartOption;\n    },\n    isTimeRangeSelected: function isTimeRangeSelected() {\n      return this.baseTimeRange.length >= 2;\n    }\n  },\n  watch: {},\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.addTabelHeightListener('parent');\n\n      _this.getData();\n    });\n  },\n  methods: {\n    getData: function () {\n      var _getData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var task;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                task = [];\n                this.isTimeRangeSelected && task.push(this.handleChartBtnClick());\n                _context.next = 5;\n                return Promise.all(task);\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      function getData() {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }(),\n    handleChartBtnClick: function () {\n      var _handleChartBtnClick = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var task, baseSearchTime, searchTime, _searchTime;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.isTimeRangeSelected) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                _context2.prev = 1;\n                task = [];\n                baseSearchTime = this.baseTimeRange.map(function (date) {\n                  return _this2.$day(date).format('YYYY-MM');\n                });\n                task.push(this.getChartData('mau', baseSearchTime));\n\n                if (this.MOM) {\n                  searchTime = this.baseTimeRange.map(function (date) {\n                    return _this2.$day(date).subtract(5, 'day').format('YYYY-MM');\n                  });\n                  task.push(this.getChartData('MOM', searchTime));\n                }\n\n                if (this.YOY) {\n                  _searchTime = this.baseTimeRange.map(function (date) {\n                    return _this2.$day(date).subtract(3, 'day').format('YYYY-MM');\n                  });\n                  task.push(this.getChartData('YOY', _searchTime));\n                }\n\n                _context2.next = 9;\n                return Promise.all(task);\n\n              case 9:\n                this.parseChartData();\n                this.parseTableData();\n                _context2.next = 16;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 13]]);\n      }));\n\n      function handleChartBtnClick() {\n        return _handleChartBtnClick.apply(this, arguments);\n      }\n\n      return handleChartBtnClick;\n    }(),\n    getChartData: function () {\n      var _getChartData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(dataType, dateArr) {\n        var type, _dateArr, startDate, endDate, result, check;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                type = this.chartType;\n                _dateArr = _slicedToArray(dateArr, 2), startDate = _dateArr[0], endDate = _dateArr[1];\n                _context3.next = 4;\n                return getStatistics({\n                  type: type,\n                  startDate: startDate,\n                  endDate: endDate\n                });\n\n              case 4:\n                result = _context3.sent;\n                check = result.hasOwnProperty('data') && Array.isArray(result.data) ? result.data : [];\n                this.chartData[dataType] = check.reduce(function (data, item) {\n                  data[item.date] = item;\n                  return data;\n                }, {});\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getChartData(_x, _x2) {\n        return _getChartData.apply(this, arguments);\n      }\n\n      return getChartData;\n    }(),\n    parseChartData: function parseChartData() {\n      var _this3 = this;\n\n      this.chartOption.option.xAxis = [];\n      this.chartOption.option.series = [];\n      this.chartOption.option.dataZoom[0].xAxisIndex = [];\n      Object.keys(this.chartData).forEach(function (key, index) {\n        var xAxis = _this3.$common.deepCopy(_this3.xAxisTpl);\n\n        var series = _this3.$common.deepCopy(_this3.seriesTpl);\n\n        Object.values(_this3.chartData.mau).forEach(function (item, itemIndex) {\n          if (key === 'mau') {\n            xAxis.data.push(item.date);\n            series.data.push(item.count);\n          } else {\n            var targetDate;\n\n            if (key === 'MOM') {\n              targetDate = _this3.$day(item.date).subtract(1, 'month').format('YYYY-MM');\n            } else if (key === 'YOY') {\n              targetDate = _this3.$day(item.date).subtract(1, 'year').format('YYYY-MM');\n            }\n\n            var matchData = Object.keys(_this3.chartData.mau).indexOf(targetDate) > -1 ? _this3.chartData.mau[targetDate] : {};\n            var base = matchData && matchData.hasOwnProperty('count') ? item.count - matchData.count : '--';\n            var ratio;\n\n            if (base === '--') {\n              ratio = '--';\n            } else {\n              var before = matchData.count;\n\n              if (before === 0) {\n                if (base === 0) {\n                  ratio = '0%';\n                } else {\n                  ratio = (before + 1) * base * 100 + '%';\n                }\n              } else {\n                if (base === 0) {\n                  ratio = (before - 1) * base * 100 + '%';\n                } else {\n                  ratio = (base / before).toFixed(2) * 100 + '%';\n                }\n              }\n            }\n\n            series.data.push(ratio);\n          }\n        });\n        series.name = _this3.allChartType.find(function (item) {\n          return key === item.label;\n        }).text;\n\n        _this3.chartOption.option.xAxis.push(xAxis);\n\n        _this3.chartOption.option.series.push(series);\n\n        _this3.chartOption.option.dataZoom[0].xAxisIndex.push(index);\n      });\n      this.showChart = true;\n    },\n    parseTableData: function parseTableData() {\n      var _this4 = this;\n\n      this.loadingMap.tableLoading = true;\n      this.tableData = [];\n      var propName = Object.keys(this.chartData);\n      var baseProp = propName[0];\n      var baseData = Object.values(this.chartData[baseProp]);\n      baseData.forEach(function (item, index) {\n        var temp = {};\n        temp.date = item.date;\n        propName.forEach(function (prop, itemIndex) {\n          if (prop === 'mau') {\n            temp.mau = item.count;\n          } else {\n            var targetDate;\n\n            if (prop === 'MOM') {\n              targetDate = _this4.$day(temp.date).subtract(1, 'month').format('YYYY-MM');\n            } else if (prop === 'YOY') {\n              targetDate = _this4.$day(temp.date).subtract(1, 'year').format('YYYY-MM');\n            }\n\n            var matchData = _this4.chartData[prop][targetDate];\n            temp[prop] = matchData && matchData.hasOwnProperty('count') ? matchData.count : '--';\n          }\n        });\n\n        _this4.tableData.push(temp);\n      });\n      this.tableMOM = this.chartData.hasOwnProperty('MOM');\n      this.tableYOY = this.chartData.hasOwnProperty('YOY');\n      this.tableSortable = true;\n      this.dateAlign = 'center';\n      this.tableHead = this.baseTimeRange.map(function (date) {\n        return _this4.$day(date).format('YYYY-MM-DD');\n      }).join(' 至 ');\n      this.loadingMap.tableLoading = false;\n    },\n    exportData: function exportData() {\n      var header = ['日期', 'MAU'];\n      this.tableMOM && header.push('环比');\n      this.tableYOY && header.push('同比');\n      var filename = 'MAU统计表';\n      var data = this.tableData.map(function (item) {\n        return Object.values(item);\n      });\n      import('@/vendor/Export2Excel').then(function (excel) {\n        excel.export_json_to_excel({\n          header: header,\n          data: data,\n          filename: filename,\n          autoWidth: true,\n          bookType: 'xlsx'\n        });\n      });\n    },\n    isContrast: function isContrast() {\n      this.contrast = !this.contrast;\n    }\n  }\n};",null]}