{"remainingRequest":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/thread-loader/dist/cjs.js!/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/babel-loader/lib/index.js!/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhaoguanglin/Documents/corgi/corgi-admin/src/components/Userinfo/UpdateUserStatus.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/src/components/Userinfo/UpdateUserStatus.vue","mtime":1586106248000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { agreeUser, failUser } from '@/api/contentMgr';\nexport default {\n  props: {\n    userId: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      loadingMap: {\n        updateUserLoading: false\n      }\n    };\n  },\n  methods: {\n    handleBtnClick: function () {\n      var _handleBtnClick = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(command) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                this.loadingMap.updateUserLoading = true;\n                _context.next = 4;\n                return this[command]();\n\n              case 4:\n                this.$emit('emitFunc', {\n                  function: 'initModule',\n                  arguments: []\n                });\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n\n              case 10:\n                _context.prev = 10;\n                this.loadingMap.updateUserLoading = false;\n                return _context.finish(10);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7, 10, 13]]);\n      }));\n\n      function handleBtnClick(_x) {\n        return _handleBtnClick.apply(this, arguments);\n      }\n\n      return handleBtnClick;\n    }(),\n    passUser: function () {\n      var _passUser = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var userId;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                userId = this.userId;\n                _context2.next = 3;\n                return agreeUser({\n                  userId: userId\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function passUser() {\n        return _passUser.apply(this, arguments);\n      }\n\n      return passUser;\n    }(),\n    failUserStatus: function () {\n      var _failUserStatus = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var userId;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                userId = this.userId;\n                _context3.next = 3;\n                return failUser({\n                  userId: userId\n                });\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function failUserStatus() {\n        return _failUserStatus.apply(this, arguments);\n      }\n\n      return failUserStatus;\n    }()\n  }\n};",null]}