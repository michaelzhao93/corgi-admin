{"remainingRequest":"/Users/zhaoguanglin/corgi-admin/node_modules/thread-loader/dist/cjs.js!/Users/zhaoguanglin/corgi-admin/node_modules/babel-loader/lib/index.js!/Users/zhaoguanglin/corgi-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhaoguanglin/corgi-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhaoguanglin/corgi-admin/src/views/dataCenter/overview/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhaoguanglin/corgi-admin/src/views/dataCenter/overview/index.vue","mtime":1589959014000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.values\";\nimport \"core-js/modules/es7.object.entries\";\nimport \"core-js/modules/es6.map\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/zhaoguanglin/corgi-admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/zhaoguanglin/corgi-admin/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getStatistics } from '@/api/dataCenter';\nimport statistics from \"../components/statistics\";\nimport dateRangePicker from \"../components/dateRangePicker\";\nimport Chart from '@/components/Chart';\nimport { emit } from '@/mixins/commonSet';\nimport tableCommon from '@/mixins/tableCommon';\nimport pageConfig from \"./pageConfig\";\nexport default {\n  components: {\n    statistics: statistics,\n    dateRangePicker: dateRangePicker,\n    Chart: Chart\n  },\n  mixins: [emit, tableCommon, pageConfig],\n  data: function data() {\n    return {\n      loadingMap: {\n        statsLoading: true\n      },\n      refs: {\n        sysBtn: 'sysTypeBtn'\n      },\n      contrast: false,\n      extraHeight: 350,\n      contrastProp: ['base', 'contrast']\n    };\n  },\n  computed: {\n    chartTitle: function chartTitle() {\n      var type = this.chartType;\n      var match = this.allChartType.find(function (item) {\n        return item.label === type;\n      });\n      return match && match.text || '未知标题';\n    },\n    chartOptionWatcher: function chartOptionWatcher() {\n      var option = this.chartOption;\n      option.option.title.text = this.chartTitle;\n      return option;\n    },\n    isTimeRangeSelected: function isTimeRangeSelected() {\n      if (this.contrast) {\n        return this.timeRangeFirst.length >= 2 && this.timeRangeSecond.length >= 2;\n      } else {\n        return this.timeRangeFirst.length >= 2;\n      }\n    },\n    isTimeRangeValid: function isTimeRangeValid() {\n      var _this = this;\n\n      if (this.isTimeRangeSelected) {\n        if (this.contrast) {\n          var _this$timeRangeFirst$ = this.timeRangeFirst.map(function (item) {\n            return _this.$day(item);\n          }),\n              _this$timeRangeFirst$2 = _slicedToArray(_this$timeRangeFirst$, 2),\n              firstStart = _this$timeRangeFirst$2[0],\n              firstEnd = _this$timeRangeFirst$2[1];\n\n          var _this$timeRangeSecond = this.timeRangeSecond.map(function (item) {\n            return _this.$day(item);\n          }),\n              _this$timeRangeSecond2 = _slicedToArray(_this$timeRangeSecond, 2),\n              secondStart = _this$timeRangeSecond2[0],\n              secondEnd = _this$timeRangeSecond2[1];\n\n          var firstDiff = firstStart.diff(firstEnd, 'day');\n          var secondDiff = secondStart.diff(secondEnd, 'day');\n\n          if (firstDiff !== secondDiff) {\n            this.$message({\n              type: 'warning',\n              message: '对比天数必须一致'\n            });\n            return false;\n          }\n        }\n\n        return true;\n      } else {\n        this.$message({\n          type: 'warning',\n          message: '请选择时间'\n        });\n        return false;\n      }\n    }\n  },\n  watch: {\n    chartTitle: function chartTitle() {\n      this.isTimeRangeSelected && this.parseChartData();\n    }\n  },\n  mounted: function mounted() {\n    this.addTabelHeightListener('parent');\n  },\n  methods: {\n    getData: function () {\n      var _getData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var task;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                task = [];\n                this.isTimeRangeSelected && task.push(this.handleChartBtnClick());\n                _context.next = 5;\n                return Promise.all(task);\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      function getData() {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }(),\n    handleChartBtnClick: function () {\n      var _handleChartBtnClick = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var task;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.isTimeRangeValid) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                _context2.prev = 1;\n                task = [];\n                this.allChartType.forEach(function (chartType) {\n                  var type = chartType.label;\n                  task.push(_this2.wrapGetChartData(type));\n                });\n                _context2.next = 6;\n                return Promise.all(task);\n\n              case 6:\n                this.parseChartData();\n                this.parseTableData();\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.error(_context2.t0);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 10]]);\n      }));\n\n      function handleChartBtnClick() {\n        return _handleChartBtnClick.apply(this, arguments);\n      }\n\n      return handleChartBtnClick;\n    }(),\n    wrapGetChartData: function () {\n      var _wrapGetChartData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(type) {\n        var task;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                task = [];\n                task.push(this.getChartData(type, this.timeRangeFirst));\n                this.contrast && task.push(this.getChartData(type, this.timeRangeSecond));\n                _context3.next = 5;\n                return Promise.all(task);\n\n              case 5:\n                this.chartData[type] = _context3.sent;\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function wrapGetChartData(_x) {\n        return _wrapGetChartData.apply(this, arguments);\n      }\n\n      return wrapGetChartData;\n    }(),\n    getChartData: function () {\n      var _getChartData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(type, dateArr) {\n        var _this3 = this;\n\n        var _dateArr$map, _dateArr$map2, startDate, endDate, result;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _dateArr$map = dateArr.map(function (item) {\n                  return _this3.$day(item).format('YYYY-MM-DD');\n                }), _dateArr$map2 = _slicedToArray(_dateArr$map, 2), startDate = _dateArr$map2[0], endDate = _dateArr$map2[1];\n                _context4.next = 3;\n                return getStatistics({\n                  type: type,\n                  startDate: startDate,\n                  endDate: endDate\n                });\n\n              case 3:\n                result = _context4.sent;\n                return _context4.abrupt(\"return\", result.hasOwnProperty('data') && Array.isArray(result.data) ? result.data : []);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getChartData(_x2, _x3) {\n        return _getChartData.apply(this, arguments);\n      }\n\n      return getChartData;\n    }(),\n    parseChartData: function parseChartData() {\n      var _this4 = this;\n\n      this.chartOption.option.xAxis = [];\n      this.chartOption.option.series = [];\n      this.chartOption.option.dataZoom[0].xAxisIndex = [];\n      var matchData = this.chartData[this.chartType];\n      Array.isArray(matchData) && matchData.forEach(function (item, index) {\n        var xAxis = _this4.$common.deepCopy(_this4.xAxisTpl);\n\n        var series = _this4.$common.deepCopy(_this4.seriesTpl);\n\n        item.forEach(function (dataItem) {\n          xAxis.data.push(dataItem.date);\n          series.data.push(dataItem.count);\n        });\n        series.name = index === 0 ? '基准' : '对比';\n\n        _this4.chartOption.option.xAxis.push(xAxis);\n\n        _this4.chartOption.option.series.push(series);\n\n        _this4.chartOption.option.dataZoom[0].xAxisIndex.push(index);\n      });\n      this.showChart = true;\n    },\n    parseTableData: function parseTableData() {\n      var _this5 = this;\n\n      this.loadingMap.tableLoading = true;\n      this.tableData = [];\n      var diffDay;\n\n      if (this.contrast) {\n        diffDay = this.$day(this.timeRangeFirst[0]).diff(this.timeRangeSecond[0], 'day');\n      }\n\n      var propName = Object.keys(this.chartData); // 初步处理数据结构\n\n      var parse = {};\n      propName.forEach(function (prop) {\n        parse[prop] = {};\n\n        var _this5$chartData$prop = _slicedToArray(_this5.chartData[prop], 2),\n            baseData = _this5$chartData$prop[0],\n            contrastData = _this5$chartData$prop[1];\n\n        if (_this5.contrast) {\n          parse[prop].contrast = new Map();\n          contrastData.forEach(function (item) {\n            return parse[prop].contrast.set(item.date, item.count);\n          });\n        }\n\n        parse[prop].base = new Map();\n        baseData.forEach(function (item) {\n          return parse[prop].base.set(item.date, item.count);\n        });\n      }); // 转化数据结构成日期为KEY的对象\n\n      var data = {};\n      Object.entries(parse).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            type = _ref2[0],\n            typeData = _ref2[1];\n\n        Object.entries(typeData).forEach(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              prop = _ref4[0],\n              propData = _ref4[1];\n\n          if (!data.hasOwnProperty(prop)) {\n            data[prop] = {};\n          }\n\n          propData.forEach(function (count, date) {\n            if (!data[prop].hasOwnProperty(date)) {\n              data[prop][date] = {};\n            }\n\n            data[prop][date][type] = count;\n          });\n        });\n      }); // 转化为table数据结构\n\n      Object.entries(data.base).forEach(function (_ref5, tableItemIndex) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            date = _ref6[0],\n            dateData = _ref6[1];\n\n        var index = \"tableItem-\".concat(tableItemIndex);\n        var temp = {\n          date: date,\n          index: index\n        };\n\n        if (_this5.contrast) {\n          temp.date = '展开';\n          temp.children = [];\n          var baseIndex = \"tableItem-\".concat(tableItemIndex, \"-baseChild\");\n          var baseChild = {\n            date: date,\n            index: baseIndex\n          };\n          Object.entries(data.base[date]).forEach(function (_ref7) {\n            var _ref8 = _slicedToArray(_ref7, 2),\n                type = _ref8[0],\n                count = _ref8[1];\n\n            baseChild[type] = count;\n          });\n\n          var baseDate = _this5.$day(date);\n\n          var absDiff = Math.abs(diffDay);\n          var contrastDate = diffDay > 0 ? baseDate.subtract(absDiff, 'day') : baseDate.add(absDiff, 'day');\n          contrastDate = contrastDate.format('YYYY-MM-DD');\n          var contrastIndex = \"tableItem-\".concat(tableItemIndex, \"-contrastChild\");\n          var contrastChild = {\n            date: contrastDate,\n            index: contrastIndex\n          };\n          var contrastData = data.contrast[contrastDate];\n          contrastData && Object.entries(contrastData).forEach(function (_ref9) {\n            var _ref10 = _slicedToArray(_ref9, 2),\n                type = _ref10[0],\n                count = _ref10[1];\n\n            contrastChild[type] = count;\n          });\n          temp.children.push(baseChild);\n          temp.children.push(contrastChild);\n        } else {\n          Object.entries(dateData).forEach(function (_ref11) {\n            var _ref12 = _slicedToArray(_ref11, 2),\n                type = _ref12[0],\n                count = _ref12[1];\n\n            temp[type] = count;\n          });\n        }\n\n        _this5.tableData.push(temp);\n      });\n      this.dateAlign = this.contrast ? 'left' : 'center';\n      var baseTitle = this.timeRangeFirst.map(function (date) {\n        return _this5.$day(date).format('YYYY-MM-DD');\n      }).join(' 至 ');\n      var contrastTitle = this.contrast ? ' 对比 ' + this.timeRangeSecond.map(function (date) {\n        return _this5.$day(date).format('YYYY-MM-DD');\n      }).join(' 至 ') : '';\n      this.tableHead = baseTitle + contrastTitle;\n      this.loadingMap.tableLoading = false;\n    },\n    exportData: function exportData() {\n      var _this6 = this;\n\n      var header = ['日期'].concat(this.allChartType.map(function (item) {\n        return item.text;\n      }));\n      var filename = this.allChartType.find(function (item) {\n        return item.label === _this6.chartType;\n      }).text;\n      var data;\n\n      if (this.contrast) {\n        data = this.tableData.map(function (item) {\n          var itemClone = _this6.$common.deepCopy(item);\n\n          delete itemClone.index;\n          return itemClone.children.map(function (child) {\n            var childClone = _this6.$common.deepCopy(child);\n\n            delete childClone.index;\n            return Object.values(childClone);\n          });\n        }).flat(1);\n      } else {\n        data = this.tableData.map(function (item) {\n          var itemClone = _this6.$common.deepCopy(item);\n\n          delete itemClone.index;\n          return Object.values(itemClone);\n        });\n      }\n\n      import('@/vendor/Export2Excel').then(function (excel) {\n        excel.export_json_to_excel({\n          header: header,\n          data: data,\n          filename: filename,\n          autoWidth: true,\n          bookType: 'xlsx'\n        });\n      });\n    },\n    isContrast: function isContrast() {\n      this.contrast = !this.contrast;\n    }\n  }\n};",null]}