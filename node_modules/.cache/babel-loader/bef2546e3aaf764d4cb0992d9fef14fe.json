{"remainingRequest":"/Users/zhaoguanglin/corgi-admin/node_modules/thread-loader/dist/cjs.js!/Users/zhaoguanglin/corgi-admin/node_modules/babel-loader/lib/index.js!/Users/zhaoguanglin/corgi-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhaoguanglin/corgi-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhaoguanglin/corgi-admin/src/views/dataCenter/components/statistics.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhaoguanglin/corgi-admin/src/views/dataCenter/components/statistics.vue","mtime":1585239066000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/zhaoguanglin/corgi-admin/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread2\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/zhaoguanglin/corgi-admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getStatistics, sumStatistics } from '@/api/dataCenter';\nexport default {\n  data: function data() {\n    return {\n      useData: {\n        ystdRegis: {\n          title: '昨日新增注册人数',\n          count: 0,\n          day: '',\n          week: '',\n          month: '',\n          loading: true\n        },\n        totalRegis: {\n          title: '累计注册人数',\n          count: 0,\n          day: '',\n          week: '',\n          month: '',\n          loading: true\n        },\n        ystdActive: {\n          title: '昨日发布活动数',\n          count: 0,\n          day: '',\n          week: '',\n          month: '',\n          loading: true\n        },\n        totalActive: {\n          title: '累计发布活动数',\n          count: 0,\n          day: '',\n          week: '',\n          month: '',\n          loading: true\n        }\n      }\n    };\n  },\n  created: function created() {\n    this.getBaseData();\n  },\n  methods: {\n    getBaseData: function () {\n      var _getBaseData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var startDate, endDate, task;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                startDate = this.$day(new Date()).subtract(1, 'day').format('YYYY-MM-DD');\n                endDate = startDate;\n                task = [];\n                task.push(this.getYstdRegis({\n                  startDate: startDate,\n                  endDate: endDate\n                }));\n                task.push(this.getYstdActivity({\n                  startDate: startDate,\n                  endDate: endDate\n                }));\n                task.push(this.getTotalRegis({\n                  startDate: startDate,\n                  endDate: endDate\n                }));\n                task.push(this.getTotalActivity({\n                  startDate: startDate,\n                  endDate: endDate\n                }));\n                _context.next = 10;\n                return Promise.all(task);\n\n              case 10:\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 12]]);\n      }));\n\n      function getBaseData() {\n        return _getBaseData.apply(this, arguments);\n      }\n\n      return getBaseData;\n    }(),\n    getYstdRegis: function () {\n      var _getYstdRegis = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(date) {\n        var type, result;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                type = 'register';\n                _context2.next = 4;\n                return this.getStatisicData(_objectSpread({\n                  type: type\n                }, date));\n\n              case 4:\n                result = _context2.sent;\n                this.useData.ystdRegis.count = Array.isArray(result) ? result[0].count : null;\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 11:\n                _context2.prev = 11;\n                this.useData.ystdRegis.loading = false;\n                return _context2.finish(11);\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 8, 11, 14]]);\n      }));\n\n      function getYstdRegis(_x) {\n        return _getYstdRegis.apply(this, arguments);\n      }\n\n      return getYstdRegis;\n    }(),\n    getYstdActivity: function () {\n      var _getYstdActivity = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(date) {\n        var type, result;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                type = 'activity';\n                _context3.next = 4;\n                return this.getStatisicData(_objectSpread({\n                  type: type\n                }, date));\n\n              case 4:\n                result = _context3.sent;\n                this.useData.ystdActive.count = Array.isArray(result) ? result[0].count : null;\n                _context3.next = 11;\n                break;\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n\n              case 11:\n                _context3.prev = 11;\n                this.useData.ystdActive.loading = false;\n                return _context3.finish(11);\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 8, 11, 14]]);\n      }));\n\n      function getYstdActivity(_x2) {\n        return _getYstdActivity.apply(this, arguments);\n      }\n\n      return getYstdActivity;\n    }(),\n    getTotalRegis: function () {\n      var _getTotalRegis = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var type;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                type = 'register';\n                _context4.next = 4;\n                return this.sumStatisicData({\n                  type: type\n                });\n\n              case 4:\n                this.useData.totalRegis.count = _context4.sent;\n                _context4.next = 10;\n                break;\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.log(_context4.t0);\n\n              case 10:\n                _context4.prev = 10;\n                this.useData.totalRegis.loading = false;\n                return _context4.finish(10);\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 7, 10, 13]]);\n      }));\n\n      function getTotalRegis() {\n        return _getTotalRegis.apply(this, arguments);\n      }\n\n      return getTotalRegis;\n    }(),\n    getTotalActivity: function () {\n      var _getTotalActivity = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var type;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                type = 'activity';\n                _context5.next = 4;\n                return this.sumStatisicData({\n                  type: type\n                });\n\n              case 4:\n                this.useData.totalActive.count = _context5.sent;\n                _context5.next = 10;\n                break;\n\n              case 7:\n                _context5.prev = 7;\n                _context5.t0 = _context5[\"catch\"](0);\n                console.log(_context5.t0);\n\n              case 10:\n                _context5.prev = 10;\n                this.useData.totalActive.loading = false;\n                return _context5.finish(10);\n\n              case 13:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 7, 10, 13]]);\n      }));\n\n      function getTotalActivity() {\n        return _getTotalActivity.apply(this, arguments);\n      }\n\n      return getTotalActivity;\n    }(),\n    getStatisicData: function () {\n      var _getStatisicData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(params) {\n        var result;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                _context6.next = 3;\n                return getStatistics(params);\n\n              case 3:\n                result = _context6.sent;\n                return _context6.abrupt(\"return\", result.hasOwnProperty('data') ? result.data : null);\n\n              case 7:\n                _context6.prev = 7;\n                _context6.t0 = _context6[\"catch\"](0);\n                console.log(_context6.t0);\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[0, 7]]);\n      }));\n\n      function getStatisicData(_x3) {\n        return _getStatisicData.apply(this, arguments);\n      }\n\n      return getStatisicData;\n    }(),\n    sumStatisicData: function () {\n      var _sumStatisicData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(params) {\n        var result;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                _context7.next = 3;\n                return sumStatistics(params);\n\n              case 3:\n                result = _context7.sent;\n                return _context7.abrupt(\"return\", result.hasOwnProperty('data') ? result.data : null);\n\n              case 7:\n                _context7.prev = 7;\n                _context7.t0 = _context7[\"catch\"](0);\n                console.log(_context7.t0);\n\n              case 10:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, null, [[0, 7]]);\n      }));\n\n      function sumStatisicData(_x4) {\n        return _sumStatisicData.apply(this, arguments);\n      }\n\n      return sumStatisicData;\n    }()\n  }\n};",null]}