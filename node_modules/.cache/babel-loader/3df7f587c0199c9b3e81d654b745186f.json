{"remainingRequest":"/Users/zhaoguanglin/corgi-admin/node_modules/thread-loader/dist/cjs.js!/Users/zhaoguanglin/corgi-admin/node_modules/babel-loader/lib/index.js!/Users/zhaoguanglin/corgi-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhaoguanglin/corgi-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhaoguanglin/corgi-admin/src/views/shopMgr/hotmanager/Detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhaoguanglin/corgi-admin/src/views/shopMgr/hotmanager/Detail.vue","mtime":1599747554192},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/zhaoguanglin/corgi-admin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { add_hot_activity, get_upload_token, update_hot_activity, get_detail } from '@/api/shopMgr';\nimport { allReportType } from '@/utils/const';\nimport ReportStatus from '@/components/ReportStatus';\nimport Userid from '@/components/Userid';\nimport Activityid from '@/components/Activityid';\nimport { visible } from '@/mixins/commonSet';\nexport default {\n  components: {\n    ReportStatus: ReportStatus,\n    Userid: Userid,\n    Activityid: Activityid\n  },\n  mixins: [visible],\n  props: {\n    useData: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      tempImg: \"\",\n      shopState: true,\n      allReportType: allReportType\n    };\n  },\n  methods: {\n    getData: function () {\n      var _getData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(this.useData);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getData() {\n        return _getData.apply(this, arguments);\n      }\n\n      return getData;\n    }(),\n    handleAddMember: function () {\n      var _handleAddMember = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var barId, activityId, id, startTime, endTime, order, status, activityName, type, city, userId, _activityId, data1, data;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                barId = this.useData.barId;\n                activityId = this.useData.activityId;\n                id = this.useData.id;\n                startTime = this.useData.startTime;\n                endTime = this.useData.endTime;\n                order = this.useData.order;\n                status = this.useData.status;\n                activityName = this.useData.activityName;\n                type = 'recommend';\n                city = '';\n                _context2.t0 = this.useData.radio;\n                _context2.next = _context2.t0 === \"活动当地\" ? 13 : _context2.t0 === \"全国\" ? 20 : 22;\n                break;\n\n              case 13:\n                userId = 0;\n                _activityId = this.useData.activityId;\n                _context2.next = 17;\n                return get_detail({\n                  userId: userId,\n                  activityId: _activityId\n                });\n\n              case 17:\n                data1 = _context2.sent;\n                city = data1.data.city;\n                return _context2.abrupt(\"break\", 23);\n\n              case 20:\n                city = '全国';\n                return _context2.abrupt(\"break\", 23);\n\n              case 22:\n                throw new Error(\"Table Layout don't have event \" + this.chartRadio + \".\");\n\n              case 23:\n                // if(this.useData.id)\n                // {\n                //   if(this.tempImg)\n                //   {\n                //     this.useData.picUrl = this.tempImg;\n                //   }\n                // order =  this.useData.order;\n                // status =  this.useData.status;\n                // let id = this.useData.id;\n                // let data = ({ id:id,title: title, url: url, order: order, status: status, type: type, picUrl: picUrl, urlType: urlType});\n                //  console.log(data)\n                // update_hot_activity(data);\n                //   this.handleDialogClose()\n                //   this.$emit('emitFunc', { function: 'getData', arguments: [] })\n                // }\n                // else\n                // {\n                data = {\n                  activityName: activityName,\n                  id: id,\n                  barId: barId,\n                  activityId: activityId,\n                  startTime: startTime,\n                  endTime: endTime,\n                  order: order,\n                  status: status,\n                  type: type,\n                  city: city\n                };\n                console.log(data);\n                update_hot_activity(data);\n                this.$emit('emitFunc', {\n                  function: 'getData',\n                  arguments: []\n                });\n                this.handleDialogClose();\n                this.$emit('emitFunc', {\n                  function: 'getData',\n                  arguments: []\n                });\n\n              case 29:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleAddMember() {\n        return _handleAddMember.apply(this, arguments);\n      }\n\n      return handleAddMember;\n    }(),\n    postimg: function () {\n      var _postimg = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(ndata) {\n        var data, region, accessKeyId, accessKeySecret, bucket, OSS, client, date, fileName, result;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return get_upload_token({});\n\n              case 2:\n                data = _context3.sent;\n                region = \"oss-cn-beijing\";\n                accessKeyId = data.data.accessKeyId;\n                accessKeySecret = data.data.accessKeySecret;\n                bucket = data.data.bucketName;\n                OSS = require('ali-oss');\n                console.log(accessKeyId);\n                client = new OSS({\n                  region: region,\n                  accessKeyId: accessKeyId,\n                  accessKeySecret: accessKeySecret,\n                  stsToken: data.data.securityToken,\n                  bucket: bucket\n                });\n                console.log(client);\n                date = Date.parse(new Date());\n                fileName = \"\".concat(date);\n                fileName = Base64.encode(fileName);\n                fileName = \"shop/\" + fileName;\n                console.log(fileName);\n                _context3.prev = 16;\n                _context3.next = 19;\n                return client.put(fileName, ndata);\n\n              case 19:\n                result = _context3.sent;\n                console.log(result);\n                this.tempImg = result.url;\n                console.log(tempImg);\n                _context3.next = 28;\n                break;\n\n              case 25:\n                _context3.prev = 25;\n                _context3.t0 = _context3[\"catch\"](16);\n                console.log(_context3.t0);\n\n              case 28:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[16, 25]]);\n      }));\n\n      function postimg(_x) {\n        return _postimg.apply(this, arguments);\n      }\n\n      return postimg;\n    }(),\n    uploadFile: function () {\n      var _uploadFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(event) {\n        var self, file, point, suffix, fileName, date;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                self = this;\n                file = event.target.files[0]; //获取input的图片file值\n\n                point = file.name.lastIndexOf('.');\n                suffix = file.name.substr(point);\n                fileName = file.name.substr(0, point);\n                date = Date.parse(new Date());\n                fileName = \"\".concat(fileName, \"_\").concat(date).concat(suffix); // if(file.size<=1* 1024* 1024){\n                // //判断图片是否大于1M,是就直接上传\n                // ndata=file;\n                // self.postimg(ndata);\n                // }else{\n                // \t//反之压缩图片\n                //    let reader = new FileReader();\n                // \t// 将图片2将转成 base64 格式\n                // \treader.readAsDataURL(file);\n                // \tconsole.log(reader)\n                // \t// 读取成功后的回调\n                // \treader.onloadend = function () {\n                // \tlet result = this.result;\n                // \tlet img = new Image();\n                // \timg.src = result;\n                //          img.onload = function () {\n                //   ndata=  self.compress(img,0.6);\n                //               console.log('*******ndata*******')\n                //       console.log(ndata)\n                //         self.postimg(ndata);\n                // \t// //BASE64转图片\n                // \t// var arr = ndata.split(','), mime = arr[0].match(/:(.*?);/)[1],\n                // \t// bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\n                // \t// while(n--){\n                // \t// u8arr[n] = bstr.charCodeAt(n);\n                // \t// }\n                //   //  ndata=new File([u8arr],f.file.name, {type:mime})\n                //          }\n                //   }\n                // }\n\n                self.postimg(file);\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function uploadFile(_x2) {\n        return _uploadFile.apply(this, arguments);\n      }\n\n      return uploadFile;\n    }(),\n    compress: function compress(img, size) {\n      var canvas = document.createElement('canvas');\n      var ctx = canvas.getContext('2d');\n      var initSize = img.src.length;\n      var width = img.width;\n      var height = img.height;\n      canvas.width = width;\n      canvas.height = height; // 铺底色\n\n      ctx.fillStyle = '#fff';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(img, 0, 0, width, height); //进行最小压缩\n\n      var ndata = canvas.toDataURL('image/jpeg', size);\n      console.log('*******压缩后的图片大小*******');\n      console.log(ndata.length / 1024);\n      var buffer = Buffer.from(ndata, 'base64');\n      console.log(buffer);\n      return buffer;\n    },\n    handleRadioChange: function handleRadioChange(value) {\n      this.shopState = this.chartRadio === '启用' ? true : false;\n    }\n  }\n};",null]}