{"remainingRequest":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/babel-loader/lib/index.js!/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhaoguanglin/Documents/corgi/corgi-admin/src/store/modules/user.js","dependencies":[{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/src/store/modules/user.js","mtime":1589534573762},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/zhaoguanglin/Documents/corgi/corgi-admin/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator\"));\n\nvar _user = require(\"@/api/user\");\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _router = require(\"@/router\");\n\nvar getDefaultState = function getDefaultState() {\n  return {\n    token: (0, _auth.getToken)(),\n    name: '',\n    avatar: ''\n  };\n};\n\nvar state = getDefaultState();\nvar mutations = {\n  RESET_STATE: function RESET_STATE(state) {\n    Object.assign(state, getDefaultState());\n  },\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_NAME: function SET_NAME(state, name) {\n    state.name = name;\n  },\n  SET_AVATAR: function SET_AVATAR(state, avatar) {\n    state.avatar = avatar;\n  }\n};\nvar actions = {\n  // user login\n  login: function login(_ref, userInfo) {\n    var commit = _ref.commit;\n    var username = userInfo.username,\n        password = userInfo.password;\n    var validUsername = 'corgi';\n    var validPassword = 'temp!@#$1234';\n    return new Promise( /*#__PURE__*/function () {\n      var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve, reject) {\n        var token;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!(username === validUsername && password === validPassword)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MzU0MjUwNDgsInVzZXJJZCI6Ii0xIiwidmVyc2lvbiI6IlYxLjAiLCJpYXQiOjE1ODgzMDIxNTV9.UcR_5JX0hIPBzySF9q4vh4oI8DyY7pXmHTzQqffiKkM';\n                commit('SET_TOKEN', token);\n                (0, _auth.setToken)(token);\n                resolve();\n                _context.next = 9;\n                break;\n\n              case 8:\n                throw new Error('输入信息有误');\n\n              case 9:\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                reject(_context.t0);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 11]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  },\n  // get user info\n  getInfo: function getInfo(_ref3) {\n    var commit = _ref3.commit,\n        state = _ref3.state;\n    return new Promise( /*#__PURE__*/function () {\n      var _ref4 = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(resolve, reject) {\n        var name;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                try {\n                  // const result = await getInfo(state.token)\n                  // if (!data) {\n                  //   reject('身份认证失败，请重新登录。')\n                  // }\n                  name = 'corgi';\n                  commit('SET_NAME', name); // commit('SET_AVATAR', avatar)\n\n                  resolve();\n                } catch (error) {\n                  reject(error);\n                }\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n  },\n  // user logout\n  logout: function logout(_ref5) {\n    var commit = _ref5.commit,\n        state = _ref5.state;\n    return new Promise( /*#__PURE__*/function () {\n      var _ref6 = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(resolve, reject) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                try {\n                  // await logout()\n                  (0, _auth.removeToken)(); // must remove  token  first\n\n                  (0, _router.resetRouter)();\n                  commit('RESET_STATE');\n                  resolve();\n                } catch (error) {\n                  reject(error);\n                }\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x5, _x6) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n  },\n  // remove token\n  resetToken: function resetToken(_ref7) {\n    var commit = _ref7.commit;\n    return new Promise(function (resolve) {\n      (0, _auth.removeToken)(); // must remove  token  first\n\n      commit('RESET_STATE');\n      resolve();\n    });\n  }\n};\nvar _default = {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};\nexports.default = _default;",null]}