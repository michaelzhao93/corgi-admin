{"remainingRequest":"/Users/zhaoguanglin/corgi-admin/node_modules/thread-loader/dist/cjs.js!/Users/zhaoguanglin/corgi-admin/node_modules/babel-loader/lib/index.js!/Users/zhaoguanglin/corgi-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhaoguanglin/corgi-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhaoguanglin/corgi-admin/src/views/login/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhaoguanglin/corgi-admin/src/views/login/index.vue","mtime":1587652364000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhaoguanglin/corgi-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { validUsername } from '@/utils/validate';\nexport default {\n  name: 'Login',\n  data: function data() {\n    var validateUsername = function validateUsername(rule, value, callback) {\n      // if (!validUsername(value)) {\n      //   callback(new Error('请输入有效用户名'))\n      // } else {\n      //   callback()\n      // }\n      if (!value) {\n        callback(new Error('请输入用户名'));\n      }\n\n      callback();\n    };\n\n    var validatePassword = function validatePassword(rule, value, callback) {\n      // if (value.length < 6) {\n      //   callback(new Error('密码长度必须大于6位'))\n      // } else {\n      //   callback()\n      // }\n      if (!value) {\n        callback(new Error('请输入密码'));\n      }\n\n      callback();\n    };\n\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          trigger: 'blur',\n          validator: validateUsername\n        }],\n        password: [{\n          required: true,\n          trigger: 'blur',\n          validator: validatePassword\n        }]\n      },\n      loading: false,\n      passwordType: 'password',\n      redirect: undefined\n    };\n  },\n  watch: {\n    $route: {\n      handler: function handler(route) {\n        this.redirect = route.query && route.query.redirect;\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    showPwd: function showPwd() {\n      var _this = this;\n\n      if (this.passwordType === 'password') {\n        this.passwordType = '';\n      } else {\n        this.passwordType = 'password';\n      }\n\n      this.$nextTick(function () {\n        _this.$refs.password.focus();\n      });\n    },\n    handleLogin: function handleLogin() {\n      var _this2 = this;\n\n      this.$refs.loginForm.validate(function (valid) {\n        if (valid) {\n          _this2.loading = true;\n\n          _this2.$store.dispatch('user/login', _this2.loginForm).then(function () {\n            _this2.$router.push({\n              path: _this2.redirect || '/'\n            });\n\n            _this2.loading = false;\n          }).catch(function () {\n            _this2.loading = false;\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    }\n  }\n};",null]}